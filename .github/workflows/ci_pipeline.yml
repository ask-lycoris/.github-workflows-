name: CI - Build, Test, SonarCloud Analysis

on:
  push:
    branches:
      - main # Or your primary development branch
      - 'feature/**'
      - 'fix/**'
      # Other branch patterns you want to run CI for
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build_test_analyze:
    name: Build, Test, Analyze
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # SonarCloud needs full history for accurate analysis

      # --------------------------------------------------------------------
      # Setup Build Environment (Example: Node.js)
      # Replace this section with steps specific to your project's language/framework
      # --------------------------------------------------------------------
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' # Specify the Node.js version used by your project
      # - name: Restore cached dependencies (optional)
      #   uses: actions/cache@v3
      #   with:
      #     path: ~/.npm # For npm
      #     key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      #     restore-keys: |
      #       ${{ runner.os }}-node-
      - name: Install dependencies
        run: npm ci # Or yarn install, etc.
      - name: Run tests (including coverage report generation)
        run: npm test -- --coverage # Example: Outputting coverage with Jest
      - name: Build project (generate deployment artifact)
        run: npm run build # Example: Build command
      # --------------------------------------------------------------------

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Required for Pull Request decoration
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }} # SonarCloud token set in GitHub Secrets
        with:
          # These might not be necessary if you have a sonar-project.properties file.
          # args: >
          #   -Dsonar.organization=your-org-key
          #   -Dsonar.projectKey=your-project-key
          #   -Dsonar.sources=. # Adjust if your source code is not in the root
          #   -Dsonar.host.url=https://sonarcloud.io
          #   # Specify the path to the test coverage report (e.g., LCOV for JavaScript/TypeScript)
          #   -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info

      - name: Upload deployment artifact
        if: github.ref == 'refs/heads/main' && github.event_name == 'push' # Only upload artifact on push to main branch
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact # Artifact name
          path: ./dist # Directory containing build artifacts (e.g., ./dist, ./build)
